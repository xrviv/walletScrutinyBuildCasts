-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

üßæ **Sparrow Wallet Reproducibility Build Report**\
**Focus:** Verifying reproducibility of Sparrow Wallet desktop binaries using Docker\
**Period:** May 9,10 and 12, 2025\
**Build Target:** Sparrow Wallet v2.1.3 using `./gradlew jpackage` inside Docker\
**Builder:** Daniel Andrei R. Garcia (dannybuntu)

**Built Artifact:**
`output/Sparrow/bin/Sparrow` (portable Linux desktop binary)

`838663d33472241a0eefcca6072b23163fef931f9e4a7cc5a55dde2e9aba0f79`

**Binary Hash from Official Release:**
`838663d33472241a0eefcca6072b23163fef931f9e4a7cc5a55dde2e9aba0f79`
Filename: `sparrow-2.1.3-x86_64.tar.gz` (GitHub Release)

* * *

**Docker Setup and Image Creation**\
‚úÖ Created project directory `~/work/builds/desktop/sparrow-build`\
‚úÖ Authored `Dockerfile` based on `ubuntu:22.04`\
‚úÖ Installed dependencies including `rpm`, `fakeroot`, `unzip`, etc.\
‚úÖ Downloaded and unpacked Temurin OpenJDK 22.0.2\
‚úÖ Cloned Sparrow Wallet repository (tag: v2.1.3) using `--recursive`\
‚úÖ Triggered build via `./gradlew jpackage`\
‚úÖ Docker image successfully built and tagged `sparrow-builder`

**Build Artifact Extraction**\
‚úÖ Created container with `docker run -d --name sparrow-build-container ...`\
‚úÖ Used `docker cp` to extract `/output/` contents from container\
‚úÖ Verified presence of:

- -   `Sparrow/` portable directory
- -   `sparrow_2.1.3-1_amd64.deb`
- -   `sparrow-2.1.3-1.x86_64.rpm`

üì¶ **Verifications Performed**

| File | SHA256 Match |
| --- | --- |
| `bin/Sparrow` | ‚úÖ Yes |
| `.deb` package | ‚ö†Ô∏è Not tested |
| `.rpm` package | ‚ö†Ô∏è Not tested |

‚úÖ Also performed `diff -r output/Sparrow official/Sparrow`
‚úÖ Deep diff via `diffoscope` revealed only binary compression differences in `lib/runtime/lib/modules` (expected for Java builds)

üß† **Binary Type Inspection**
Command: `file output/Sparrow/bin/Sparrow`\
Result:
`ELF 64-bit LSB pie executable, x86-64, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, not stripped`

üß† **Observations and Lessons Learned**
‚úÖ The `bin/Sparrow` binary built inside Docker was **bit-for-bit identical** with the official release\
‚úÖ Java runtime differences (e.g., `lib/modules`) are **not critical** to app logic\
‚úÖ Using Docker ensures clean, repeatable builds without host system contamination\
‚ö†Ô∏è `bash` inside container was unusable via `ENTRYPOINT` ‚Äî resolved using `tail -f /dev/null` and `docker cp`\
‚úÖ File system cleanliness was maintained by isolating `/output` and cleaning up containers after use\
-----BEGIN PGP SIGNATURE-----

iQIzBAEBCgAdFiEE9ZpmGqc8kjwN4h+ir6WiII+d4c8FAmghbJoACgkQr6WiII+d
4c9ZyxAAjrwgtoBTWGIyO44tCY+uOiME3tWdE7Ecz1ag0KjdZxk69CTdDgmNd+qI
0ZYN7T2jSZX675QkHIz12ktX5gc8GDrnuehOfeeZBFZfweLcBHr0zLT66atzYRdc
+WnTAndxGRzQ71TChPTbX4PKaPCJCvvF5AGFY9MwNoBWZTzrmoG9AwO/m4t44vEO
mKDsRoCwNsVYVg8A93s+J/P1q5nJm8Onnv8afTi5Ko5DlZMR5aZ5mMSL7LURfYKS
gjZHhadmDR0krw8+tY3jvbE1cJSN5cnSdFPqYxW30YnleIArxLX+H2gw4PLqqAwa
VF2b6PPOzsLDCFusHgwXf13++WiBpg3TgfFKcQZiWmxKMp2scxXhjyFyaHD0aNI6
XVDXv2HL+pgUJ5DCvl/Jn/0jPkctdO0qEm68yGDzrUr7d7hhV5d7GIKvB/NrJ6sx
bEjB4twYyPDw6i50ZjFkNMSFAdeTZsvlJ82O/VEIT09Ne/bVFkhLiyY96Ot4I3xp
gYMvA4kz41MH34p2Qvoeq1P6lJyeigRhPAzGb8sQ19NhXK/M7JOyy/7BGF6U0XSr
/fWDew8Vc1oSFJgLa/QRfgut5mfGtIjSXe1+ipmsT8ppAJZYv1zUoufO/4PvXy5f
79lDVa9nCUbLbgEvh89T1lmIE/0iU2XVwI8iMVcb4ctS0uIiolA=
=ufez
-----END PGP SIGNATURE-----
